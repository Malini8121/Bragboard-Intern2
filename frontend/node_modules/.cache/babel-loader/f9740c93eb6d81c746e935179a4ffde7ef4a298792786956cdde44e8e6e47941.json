{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Bragboard-Intern\\\\frontend\\\\src\\\\components\\\\home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './navbar'; // Assuming a Navbar component exists\nimport { useNavigate } from 'react-router-dom';\n\n// frontend/src/components/home.jsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // Hook to programmatically navigate users\n  const navigate = useNavigate();\n  // State to hold user data, initialized to null\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    // 1. Check for Access Token for Authentication\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      // If no token is found, redirect to the login page\n      navigate('/login');\n      return; // Stop further execution in useEffect\n    }\n\n    // 2. SIMULATION: Displaying data without an API call\n    // This section fulfills the requirement to show name and department.\n    // In a real application, you would make an API call here\n    // using 'fetch' or 'axios' with the 'token' in the headers\n    // to securely fetch the actual user's profile data.\n\n    const simulatedUserData = {\n      name: \"Malini [Tech Lead]\",\n      department: \"Engineering\"\n    };\n    setUserData(simulatedUserData);\n\n    // The previous code had a stray 'navigate()' here, which is removed.\n    // Navigation is only needed if the token is missing.\n  }, [navigate]); // Dependency array includes 'navigate'\n\n  // Conditional Rendering: Display a loading message until userData is available\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main Render: Display the Home component content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome Home!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the inside the home component.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Logged in user details (Simulated):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 12\n        }, this), \" \", userData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 12\n        }, this), \" \", userData.department]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"2mGV6gUwJELGOttQjmxgLOaxUeY=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","useNavigate","jsxDEV","_jsxDEV","Home","_s","navigate","userData","setUserData","token","localStorage","getItem","simulatedUserData","name","department","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/Bragboard-Intern/frontend/src/components/home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './navbar'; // Assuming a Navbar component exists\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// frontend/src/components/home.jsx\r\n\r\nconst Home = () => {\r\n  // Hook to programmatically navigate users\r\n  const navigate = useNavigate();\r\n  // State to hold user data, initialized to null\r\n  const [userData, setUserData] = useState(null); \r\n\r\n  useEffect(() => {\r\n    // 1. Check for Access Token for Authentication\r\n    const token = localStorage.getItem('access_token');\r\n    \r\n    if (!token) {\r\n      // If no token is found, redirect to the login page\r\n      navigate('/login');\r\n      return; // Stop further execution in useEffect\r\n    }\r\n\r\n    // 2. SIMULATION: Displaying data without an API call\r\n    // This section fulfills the requirement to show name and department.\r\n    // In a real application, you would make an API call here\r\n    // using 'fetch' or 'axios' with the 'token' in the headers\r\n    // to securely fetch the actual user's profile data.\r\n    \r\n    const simulatedUserData = {\r\n      name: \"Malini [Tech Lead]\",\r\n      department: \"Engineering\"\r\n    };\r\n\r\n    setUserData(simulatedUserData);\r\n    \r\n    // The previous code had a stray 'navigate()' here, which is removed.\r\n    // Navigation is only needed if the token is missing.\r\n\r\n  }, [navigate]); // Dependency array includes 'navigate'\r\n\r\n  // Conditional Rendering: Display a loading message until userData is available\r\n  if (!userData) {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <p>Loading user profile...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main Render: Display the Home component content\r\n  return (\r\n    <div>\r\n      {/* 1. Navbar Component: Assuming it's the navigation bar */}\r\n      <Navbar /> \r\n\r\n      {/* 2. Main Content */}\r\n      <div style={{ padding: '20px' }}>\r\n        <h2>Welcome Home!</h2>\r\n        \r\n        {/* Display User Data from the state */}\r\n        <p>This is the inside the home component.</p>\r\n        <p>Logged in user details (Simulated):</p>\r\n        \r\n        {/* Data is accessed from the userData state */}\r\n        <p><strong>Name:</strong> {userData.name}</p>\r\n        <p><strong>Department:</strong> {userData.department}</p>\r\n        \r\n        {/* You can add more content here, like a dashboard or recent activity */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}