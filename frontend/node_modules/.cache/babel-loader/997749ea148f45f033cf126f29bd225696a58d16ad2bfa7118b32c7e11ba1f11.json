{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Bragboard-Intern\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n\n// Import all your components\nimport Home from \"./components/home\";\nimport Register from \"./components/register\"; // <-- Added\nimport Login from \"./components/login\"; // <-- Added\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // --- Temporary Authentication Check ---\n  // In a real app, you would check localStorage for the JWT token here.\n  // For now, let's assume the user is NOT logged in initially to test the routes.\n  const isAuthenticated = false;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Home","Register","Login","jsxDEV","_jsxDEV","App","isAuthenticated","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/Bragboard-Intern/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\n// Import all your components\r\nimport Home from \"./components/home\";\r\nimport Register from \"./components/register\"; // <-- Added\r\nimport Login from \"./components/login\";     // <-- Added\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  // --- Temporary Authentication Check ---\r\n  // In a real app, you would check localStorage for the JWT token here.\r\n  // For now, let's assume the user is NOT logged in initially to test the routes.\r\n  const isAuthenticated = false; \r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        \r\n        {/* 1. Home Route */}\r\n        {/* If authenticated, show Home; otherwise, redirect to Login. */}\r\n        <Route \r\n          path=\"/\" \r\n          element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />} \r\n        />\r\n        \r\n        {/* 2. Public Routes */}\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n\r\n        {/* 3. Protected Route Example (Will be used later) */}\r\n        {/* <Route \r\n          path=\"/dashboard\" \r\n          element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />} \r\n        />\r\n        */}\r\n\r\n        {/* 4. Catch-all route for any other path */}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n        \r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;;AAEnF;AACA,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAC9C,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAK5C,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA,MAAMC,eAAe,GAAG,KAAK;EAE7B,oBACEF,OAAA,CAACR,MAAM;IAAAW,QAAA,eACLH,OAAA,CAACP,MAAM;MAAAU,QAAA,gBAILH,OAAA,CAACN,KAAK;QACJU,IAAI,EAAC,GAAG;QACRC,OAAO,EAAEH,eAAe,gBAAGF,OAAA,CAACJ,IAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGT,OAAA,CAACL,QAAQ;UAACe,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eAGFT,OAAA,CAACN,KAAK;QAACU,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEL,OAAA,CAACH,QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDT,OAAA,CAACN,KAAK;QAACU,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEL,OAAA,CAACF,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAU3CT,OAAA,CAACN,KAAK;QAACU,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEL,OAAA,CAACL,QAAQ;UAACe,EAAE,EAAC;QAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACE,EAAA,GAlCQV,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}