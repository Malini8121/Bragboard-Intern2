{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Bragboard-Intern\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// Import your components\nimport Login from './components/login.jsx';\nimport Register from './components/register.jsx';\nimport Dashboard from './components/dashboard.jsx';\nimport Navbar from './components/navbar.jsx'; // Assuming this is your NavBar\n\n// --- New ProtectedRoute Component ---\n// This component checks for the access token before rendering the Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  // Check if the access token exists in localStorage\n  const isAuthenticated = !!localStorage.getItem('access_token');\n\n  // If authenticated, render the children (the Dashboard)\n  // If not, redirect to the login page\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 41\n  }, this);\n};\n_c = ProtectedRoute;\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // Wrap your app with the Router\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Login","Register","Dashboard","Navbar","jsxDEV","_jsxDEV","ProtectedRoute","children","isAuthenticated","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","className","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/Bragboard-Intern/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// Import your components\r\nimport Login from './components/login.jsx';\r\nimport Register from './components/register.jsx';\r\nimport Dashboard from './components/dashboard.jsx'; \r\nimport Navbar from './components/navbar.jsx'; // Assuming this is your NavBar\r\n\r\n// --- New ProtectedRoute Component ---\r\n// This component checks for the access token before rendering the Dashboard\r\nconst ProtectedRoute = ({ children }) => {\r\n    // Check if the access token exists in localStorage\r\n    const isAuthenticated = !!localStorage.getItem('access_token');\r\n    \r\n    // If authenticated, render the children (the Dashboard)\r\n    // If not, redirect to the login page\r\n    return isAuthenticated ? children : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    // Wrap your app with the Router\r\n    <Router>\r\n        <div className=\"App\">\r\n            {/* The Navbar will appear on all pages */}\r\n            <Navbar /> \r\n            <Routes>\r\n                {/* Public Routes */}\r\n                <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/register\" element={<Register />} />\r\n\r\n                {/* Protected Route: Only accessible if logged in */}\r\n                <Route \r\n                    path=\"/dashboard\" \r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <Dashboard />\r\n                        </ProtectedRoute>\r\n                    } \r\n                />\r\n            </Routes>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}